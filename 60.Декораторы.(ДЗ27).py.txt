# Задание 1
# Создайте функцию, возвращающую список со всеми
# простыми числами от 0 до 1000.
# Используя механизм декораторов посчитайте сколько
# секунд, потребовалось для вычисления всех простых чисел.
# Отобразите на экран количество секунд и простые числа.
print('ЗАДАНИЕ 1')
from time import time

def decorator(func):
    def wrapper():
        lst = []
        start_time = time() 
        lst = func()
        end_time = time() 
        print('Время поиска: {:.3f} секунд'.format(end_time - start_time)) 
        print('Найденые простые числа:', lst)
    return wrapper

@decorator
def simplenumber(): 
    prime_numbers = [] 
    for num in range(1, 1001):
        for i in range(2, num):
            if num % i == 0:
                break
        else:
            prime_numbers.append(num)
    return prime_numbers
    
simplenumber()
#############################################################
# Задание 3
# Каждый год ваша компания предоставляет различным
# государственным организациям финансовую отчетность.
# В зависимости от организации форматы отчетности разные.
# Используя механизм декораторов, решите вопрос
# отчетности для организаций.
print('\nЗАДАНИЕ 3')

def organization1(func):
    def wrapper():
        print('Формат 1 для', end=' ')
        func()
        print('в государственную организацию 1')
    return wrapper

def organization2(func):
    def wrapper():
        print('Формат 2 для', end=' ')
        func()
        print('в государственную организацию 2')
    return wrapper

def organization3(func):
    def wrapper():
        print('Формат 3 для', end=' ')
        func()
        print('в государственную организацию 3')
    return wrapper

@organization1
def report1():
    print('финансовой отчетности', end=' ')

@organization2
def report2():
    print('финансовой отчетности', end=' ')

@organization3
def report3():
    print('финансовой отчетности', end=' ')

report1()
report2()
report3()